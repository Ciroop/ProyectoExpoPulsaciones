{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciroa\\\\OneDrive\\\\Escritorio\\\\Dibujo-React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Canvas from './components/Canvas';\nimport Toolbar from './components/Toolbar';\nimport './index.css'; // Asegúrate de que este archivo se importe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(5);\n  const [history, setHistory] = useState([]); // Para almacenar el historial de dibujos\n  const [isDrawing, setIsDrawing] = useState(false); // Estado para verificar si se está dibujando\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    loadBackground(); // Cargar la imagen de fondo\n  };\n  const loadBackground = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.src = '/path/to/background/image.jpg'; // Ruta de la imagen de fondo\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n  const startDrawing = event => {\n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Captura el estado actual del lienzo\n    const dataUrl = canvas.toDataURL();\n    setHistory(prev => [...prev, dataUrl]); // Agrega el estado a la pila\n\n    const rect = canvas.getBoundingClientRect(); // Obtiene el rectángulo del lienzo\n    const x = event.clientX - rect.left; // Calcula la posición X relativa al lienzo\n    const y = event.clientY - rect.top; // Calcula la posición Y relativa al lienzo\n\n    context.lineWidth = lineWidth;\n    context.strokeStyle = color;\n    context.beginPath();\n    context.moveTo(x, y); // Usa las coordenadas ajustadas\n  };\n  const draw = event => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect(); // Obtiene el rectángulo del lienzo\n    const x = event.clientX - rect.left; // Calcula la posición X relativa al lienzo\n    const y = event.clientY - rect.top; // Calcula la posición Y relativa al lienzo\n\n    context.lineTo(x, y); // Usa las coordenadas ajustadas\n    context.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const undo = () => {\n    if (history.length > 0) {\n      const newHistory = [...history];\n      newHistory.pop(); // Elimina el último estado de la pila\n\n      const previousDrawing = newHistory[newHistory.length - 1]; // Obtiene el nuevo estado más reciente\n\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      // Limpia el lienzo\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      loadBackground(); // Recarga la imagen de fondo\n\n      if (previousDrawing) {\n        // Dibuja el estado anterior en el lienzo\n        const img = new Image();\n        img.src = previousDrawing;\n        img.onload = () => {\n          context.drawImage(img, 0, 0);\n        };\n      }\n      setHistory(newHistory); // Actualiza la pila de historial\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      setColor: setColor,\n      setLineWidth: setLineWidth,\n      clearCanvas: clearCanvas,\n      undo: undo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef,\n      color: color,\n      lineWidth: lineWidth,\n      startDrawing: startDrawing,\n      draw: draw,\n      stopDrawing: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"almCSt2fg6kCD3ohAZKtwdfPb/Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Canvas","Toolbar","jsxDEV","_jsxDEV","App","_s","canvasRef","color","setColor","lineWidth","setLineWidth","history","setHistory","isDrawing","setIsDrawing","clearCanvas","canvas","current","context","getContext","clearRect","width","height","loadBackground","img","Image","src","onload","drawImage","startDrawing","event","dataUrl","toDataURL","prev","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","strokeStyle","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","undo","length","newHistory","pop","previousDrawing","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/ciroa/OneDrive/Escritorio/Dibujo-React/my-app/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Canvas from './components/Canvas';\nimport Toolbar from './components/Toolbar';\nimport './index.css'; // Asegúrate de que este archivo se importe\n\nconst App = () => {\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(5);\n  const [history, setHistory] = useState([]); // Para almacenar el historial de dibujos\n  const [isDrawing, setIsDrawing] = useState(false); // Estado para verificar si se está dibujando\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    loadBackground(); // Cargar la imagen de fondo\n  };\n\n  const loadBackground = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.src = '/path/to/background/image.jpg'; // Ruta de la imagen de fondo\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n\n  const startDrawing = (event) => {\n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Captura el estado actual del lienzo\n    const dataUrl = canvas.toDataURL();\n    setHistory((prev) => [...prev, dataUrl]); // Agrega el estado a la pila\n\n    const rect = canvas.getBoundingClientRect(); // Obtiene el rectángulo del lienzo\n    const x = event.clientX - rect.left; // Calcula la posición X relativa al lienzo\n    const y = event.clientY - rect.top; // Calcula la posición Y relativa al lienzo\n\n    context.lineWidth = lineWidth;\n    context.strokeStyle = color;\n    context.beginPath();\n    context.moveTo(x, y); // Usa las coordenadas ajustadas\n  };\n\n  const draw = (event) => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    const rect = canvas.getBoundingClientRect(); // Obtiene el rectángulo del lienzo\n    const x = event.clientX - rect.left; // Calcula la posición X relativa al lienzo\n    const y = event.clientY - rect.top; // Calcula la posición Y relativa al lienzo\n\n    context.lineTo(x, y); // Usa las coordenadas ajustadas\n    context.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const undo = () => {\n    if (history.length > 0) {\n      const newHistory = [...history];\n      newHistory.pop(); // Elimina el último estado de la pila\n\n      const previousDrawing = newHistory[newHistory.length - 1]; // Obtiene el nuevo estado más reciente\n\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      // Limpia el lienzo\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      loadBackground(); // Recarga la imagen de fondo\n\n      if (previousDrawing) {\n        // Dibuja el estado anterior en el lienzo\n        const img = new Image();\n        img.src = previousDrawing;\n        img.onload = () => {\n          context.drawImage(img, 0, 0);\n        };\n      }\n\n      setHistory(newHistory); // Actualiza la pila de historial\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', height: '100vh' }}>\n      <Toolbar setColor={setColor} setLineWidth={setLineWidth} clearCanvas={clearCanvas} undo={undo} />\n      <Canvas\n        ref={canvasRef}\n        color={color}\n        lineWidth={lineWidth}\n        startDrawing={startDrawing}\n        draw={draw}\n        stopDrawing={stopDrawing}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}