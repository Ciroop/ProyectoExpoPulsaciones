{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciroa\\\\OneDrive\\\\Escritorio\\\\Dibujo-React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(10);\n  const [traces, setTraces] = useState([]); // Aquí almacenaremos cada trazo y su goteo original\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTrace, setCurrentTrace] = useState([]);\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    loadBackground();\n    setTraces([]);\n  };\n  const loadBackground = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.src = '/path/to/background/image.jpg';\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n  const startDrawing = event => {\n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const startX = event.clientX - rect.left;\n    const startY = event.clientY - rect.top;\n    context.lineWidth = lineWidth;\n    context.strokeStyle = color;\n    context.lineCap = 'round';\n    context.beginPath();\n    context.moveTo(startX, startY);\n    const initialTrace = {\n      x: startX,\n      y: startY,\n      color,\n      lineWidth,\n      spray: []\n    };\n    setCurrentTrace([initialTrace]);\n  };\n  const draw = event => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    context.lineTo(x, y);\n    context.stroke();\n\n    // Genera y almacena el goteo único para este punto del trazo\n    const sprayDots = generateSpray(x, y, lineWidth, 15); // Creamos las gotas de spray una sola vez\n    setCurrentTrace(prev => [...prev, {\n      x,\n      y,\n      color,\n      lineWidth,\n      spray: sprayDots\n    }]);\n\n    // Dibujar el spray\n    drawSpray(context, sprayDots);\n  };\n  const generateSpray = (x, y, lineWidth, numSprayDots) => {\n    const sprayDots = [];\n    for (let i = 0; i < numSprayDots; i++) {\n      const offsetX = (Math.random() - 0.5) * lineWidth;\n      const offsetY = (Math.random() - 0.5) * lineWidth;\n      const radius = lineWidth / 3;\n      sprayDots.push({\n        x: x + offsetX,\n        y: y + offsetY,\n        radius\n      });\n    }\n    return sprayDots; // Aquí almacenamos las gotas exactas\n  };\n  const drawSpray = (context, sprayDots) => {\n    sprayDots.forEach(dot => {\n      context.beginPath();\n      context.arc(dot.x, dot.y, dot.radius, 0, Math.PI * 2);\n      context.fillStyle = color;\n      context.fill();\n    });\n  };\n  const stopDrawing = () => {\n    if (isDrawing) {\n      setTraces([...traces, currentTrace]); // Guardamos todo el trazo con sus gotas\n    }\n    setIsDrawing(false);\n    setCurrentTrace([]);\n  };\n  const undo = () => {\n    if (traces.length > 0) {\n      const newTraces = traces.slice(0, -1);\n      setTraces(newTraces);\n      redrawCanvas(newTraces);\n    }\n  };\n  const redrawCanvas = tracesToRedraw => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    loadBackground();\n    tracesToRedraw.forEach(trace => {\n      context.strokeStyle = trace[0].color;\n      context.lineWidth = trace[0].lineWidth;\n      context.beginPath();\n      context.moveTo(trace[0].x, trace[0].y);\n      trace.forEach(point => {\n        context.lineTo(point.x, point.y);\n        context.stroke();\n        drawSpray(context, point.spray); // Dibujamos el spray original sin modificarlo\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      setColor: setColor,\n      setLineWidth: setLineWidth,\n      clearCanvas: clearCanvas,\n      undo: undo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef,\n      startDrawing: startDrawing,\n      draw: draw,\n      stopDrawing: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"03KVv6infjZcWkXyO8iFIi6rrao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","canvasRef","useRef","color","setColor","useState","lineWidth","setLineWidth","traces","setTraces","isDrawing","setIsDrawing","currentTrace","setCurrentTrace","clearCanvas","canvas","current","context","getContext","clearRect","width","height","loadBackground","img","Image","src","onload","drawImage","startDrawing","event","rect","getBoundingClientRect","startX","clientX","left","startY","clientY","top","strokeStyle","lineCap","beginPath","moveTo","initialTrace","x","y","spray","draw","lineTo","stroke","sprayDots","generateSpray","prev","drawSpray","numSprayDots","i","offsetX","Math","random","offsetY","radius","push","forEach","dot","arc","PI","fillStyle","fill","stopDrawing","undo","length","newTraces","slice","redrawCanvas","tracesToRedraw","trace","point","_jsxDEV","style","display","children","Toolbar","fileName","_jsxFileName","lineNumber","columnNumber","Canvas","ref","_c","$RefreshReg$"],"sources":["C:/Users/ciroa/OneDrive/Escritorio/Dibujo-React/my-app/src/App.js"],"sourcesContent":["const App = () => {\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(10);\n  const [traces, setTraces] = useState([]); // Aquí almacenaremos cada trazo y su goteo original\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTrace, setCurrentTrace] = useState([]);\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    loadBackground();\n    setTraces([]);\n  };\n\n  const loadBackground = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.src = '/path/to/background/image.jpg';\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n\n  const startDrawing = (event) => {\n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    const rect = canvas.getBoundingClientRect();\n    const startX = event.clientX - rect.left;\n    const startY = event.clientY - rect.top;\n\n    context.lineWidth = lineWidth;\n    context.strokeStyle = color;\n    context.lineCap = 'round';\n    context.beginPath();\n    context.moveTo(startX, startY);\n\n    const initialTrace = { x: startX, y: startY, color, lineWidth, spray: [] };\n    setCurrentTrace([initialTrace]);\n  };\n\n  const draw = (event) => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    context.lineTo(x, y);\n    context.stroke();\n\n    // Genera y almacena el goteo único para este punto del trazo\n    const sprayDots = generateSpray(x, y, lineWidth, 15); // Creamos las gotas de spray una sola vez\n    setCurrentTrace((prev) => [...prev, { x, y, color, lineWidth, spray: sprayDots }]);\n    \n    // Dibujar el spray\n    drawSpray(context, sprayDots);\n  };\n\n  const generateSpray = (x, y, lineWidth, numSprayDots) => {\n    const sprayDots = [];\n    for (let i = 0; i < numSprayDots; i++) {\n      const offsetX = (Math.random() - 0.5) * lineWidth;\n      const offsetY = (Math.random() - 0.5) * lineWidth;\n      const radius = (lineWidth / 3);\n      sprayDots.push({ x: x + offsetX, y: y + offsetY, radius });\n    }\n    return sprayDots; // Aquí almacenamos las gotas exactas\n  };\n\n  const drawSpray = (context, sprayDots) => {\n    sprayDots.forEach(dot => {\n      context.beginPath();\n      context.arc(dot.x, dot.y, dot.radius, 0, Math.PI * 2);\n      context.fillStyle = color;\n      context.fill();\n    });\n  };\n\n  const stopDrawing = () => {\n    if (isDrawing) {\n      setTraces([...traces, currentTrace]); // Guardamos todo el trazo con sus gotas\n    }\n    setIsDrawing(false);\n    setCurrentTrace([]);\n  };\n\n  const undo = () => {\n    if (traces.length > 0) {\n      const newTraces = traces.slice(0, -1);\n      setTraces(newTraces);\n      redrawCanvas(newTraces);\n    }\n  };\n\n  const redrawCanvas = (tracesToRedraw) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    loadBackground();\n\n    tracesToRedraw.forEach(trace => {\n      context.strokeStyle = trace[0].color;\n      context.lineWidth = trace[0].lineWidth;\n      context.beginPath();\n      context.moveTo(trace[0].x, trace[0].y);\n\n      trace.forEach(point => {\n        context.lineTo(point.x, point.y);\n        context.stroke();\n        drawSpray(context, point.spray); // Dibujamos el spray original sin modificarlo\n      });\n    });\n  };\n\n  return (\n    <div style={{ display: 'flex', height: '100vh' }}>\n      <Toolbar setColor={setColor} setLineWidth={setLineWidth} clearCanvas={clearCanvas} undo={undo} />\n      <Canvas ref={canvasRef} startDrawing={startDrawing} draw={draw} stopDrawing={stopDrawing} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}