{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciroa\\\\OneDrive\\\\Escritorio\\\\Dibujo-React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Toolbar from './components/Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [color, setColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(5);\n  const canvasRef = useRef(null);\n  const [drawingHistory, setDrawingHistory] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const startDrawing = e => {\n    setIsDrawing(true);\n    setLastX(e.clientX);\n    setLastY(e.clientY);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Configura el color y el grosor del trazo\n    context.strokeStyle = color; // Usa el color definido\n    context.lineWidth = lineWidth; // Usa el grosor definido\n\n    context.beginPath();\n    context.moveTo(lastX, lastY);\n    context.lineTo(e.clientX, e.clientY);\n    context.stroke();\n    setLastX(e.clientX);\n    setLastY(e.clientY);\n\n    // Guardar en el historial\n    const currentDrawing = {\n      startX: lastX,\n      startY: lastY,\n      endX: e.clientX,\n      endY: e.clientY,\n      color: color,\n      lineWidth: lineWidth\n    };\n    setDrawingHistory([...drawingHistory, currentDrawing]);\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  };\n  const undo = () => {\n    if (drawingHistory.length > 0) {\n      const newHistory = drawingHistory.slice(0, -1);\n      setDrawingHistory(newHistory);\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Redibujar el historial\n      newHistory.forEach(line => {\n        context.beginPath();\n        context.moveTo(line.startX, line.startY);\n        context.lineTo(line.endX, line.endY);\n        context.strokeStyle = line.color;\n        context.lineWidth = line.lineWidth;\n        context.stroke();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      setColor: setColor,\n      setLineWidth: setLineWidth,\n      clearCanvas: clearCanvas,\n      undo: undo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UiNuJItS6R+1AOw7yci1CmmMBNY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Toolbar","jsxDEV","_jsxDEV","App","_s","color","setColor","lineWidth","setLineWidth","canvasRef","drawingHistory","setDrawingHistory","isDrawing","setIsDrawing","lastX","setLastX","lastY","setLastY","startDrawing","e","clientX","clientY","draw","canvas","current","context","getContext","strokeStyle","beginPath","moveTo","lineTo","stroke","currentDrawing","startX","startY","endX","endY","stopDrawing","clearCanvas","clearRect","width","height","undo","length","newHistory","slice","forEach","line","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","window","innerWidth","innerHeight","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/ciroa/OneDrive/Escritorio/Dibujo-React/my-app/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Toolbar from './components/Toolbar';\n\nconst App = () => {\n  const [color, setColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(5);\n  const canvasRef = useRef(null);\n  const [drawingHistory, setDrawingHistory] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n\n  const startDrawing = (e) => {\n    setIsDrawing(true);\n    setLastX(e.clientX);\n    setLastY(e.clientY);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    \n    // Configura el color y el grosor del trazo\n    context.strokeStyle = color; // Usa el color definido\n    context.lineWidth = lineWidth; // Usa el grosor definido\n    \n    context.beginPath();\n    context.moveTo(lastX, lastY);\n    context.lineTo(e.clientX, e.clientY);\n    context.stroke();\n    \n    setLastX(e.clientX);\n    setLastY(e.clientY);\n\n    // Guardar en el historial\n    const currentDrawing = {\n      startX: lastX,\n      startY: lastY,\n      endX: e.clientX,\n      endY: e.clientY,\n      color: color,\n      lineWidth: lineWidth,\n    };\n    setDrawingHistory([...drawingHistory, currentDrawing]);\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const undo = () => {\n    if (drawingHistory.length > 0) {\n      const newHistory = drawingHistory.slice(0, -1);\n      setDrawingHistory(newHistory);\n\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Redibujar el historial\n      newHistory.forEach((line) => {\n        context.beginPath();\n        context.moveTo(line.startX, line.startY);\n        context.lineTo(line.endX, line.endY);\n        context.strokeStyle = line.color;\n        context.lineWidth = line.lineWidth;\n        context.stroke();\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Toolbar \n        setColor={setColor} \n        setLineWidth={setLineWidth} \n        clearCanvas={clearCanvas} \n        undo={undo} \n      />\n      <canvas\n        ref={canvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseLeave={stopDrawing}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}